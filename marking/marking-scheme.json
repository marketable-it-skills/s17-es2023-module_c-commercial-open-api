{
  "totalMark": 17,
  "wsosSections": {
    "1": "Work organization and self-management",
    "2": "Communication and interpersonal skills",
    "5": "Back-end development"
  },
  "subCriterions": [
    {
      "name": "API Authentication",
      "aspects": [
        {
          "type": "measurement",
          "description": "API endpoints require valid X-API-TOKEN header",
          "maxMark": 0.5,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        },
        {
          "type": "measurement",
          "description": "API returns 401 error for invalid tokens",
          "maxMark": 0.5,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        },
        {
          "type": "measurement",
          "description": "Token correctly identifies user and workspace",
          "maxMark": 0.5,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        }
      ]
    },
    {
      "name": "Quota Management",
      "aspects": [
        {
          "type": "measurement",
          "description": "API enforces user-defined quotas per workspace",
          "maxMark": 1.0,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        },
        {
          "type": "measurement",
          "description": "API returns 403 error when quota is exceeded",
          "maxMark": 0.5,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        },
        {
          "type": "measurement",
          "description": "Last call may exceed quota but subsequent calls are blocked",
          "maxMark": 0.5,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        }
      ]
    },
    {
      "name": "Billing System",
      "aspects": [
        {
          "type": "measurement",
          "description": "API tracks service usage and updates billing data",
          "maxMark": 1.0,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        },
        {
          "type": "measurement",
          "description": "Billing calculation uses milliseconds * service price",
          "maxMark": 0.5,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        },
        {
          "type": "measurement",
          "description": "Price is rounded up to nearest 100th of a cent",
          "maxMark": 0.5,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        },
        {
          "type": "measurement",
          "description": "Failed operations do not update billing data",
          "maxMark": 0.5,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        }
      ]
    },
    {
      "name": "ChatterBlast Chat API",
      "aspects": [
        {
          "type": "measurement",
          "description": "Chat endpoint creates conversation and handles prompts",
          "maxMark": 1.0,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        },
        {
          "type": "measurement",
          "description": "Conversation state prevents concurrent calls",
          "maxMark": 0.5,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        },
        {
          "type": "measurement",
          "description": "Streaming response excludes EOF timing indicator",
          "maxMark": 0.5,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        },
        {
          "type": "measurement",
          "description": "Billing uses duration from EOF indicator",
          "maxMark": 0.5,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        }
      ]
    },
    {
      "name": "DreamWeaver Image Generation API",
      "aspects": [
        {
          "type": "measurement",
          "description": "Image generation endpoint handles async job management",
          "maxMark": 1.0,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        },
        {
          "type": "measurement",
          "description": "Images are downloaded and stored locally with new URLs",
          "maxMark": 1.0,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        },
        {
          "type": "measurement",
          "description": "Supports upscale, zoom in, and zoom out operations",
          "maxMark": 0.5,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        },
        {
          "type": "measurement",
          "description": "Billing tracks job duration from start to completion",
          "maxMark": 0.5,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        }
      ]
    },
    {
      "name": "MindReader Image Recognition API",
      "aspects": [
        {
          "type": "measurement",
          "description": "Image recognition endpoint accepts multipart/form-data",
          "maxMark": 0.5,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        },
        {
          "type": "measurement",
          "description": "Correctly maps bounding box coordinates (top,left,bottom,right to x,y,width,height)",
          "maxMark": 1.0,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        },
        {
          "type": "measurement",
          "description": "Returns recognized objects with probabilities",
          "maxMark": 0.5,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        }
      ]
    },
    {
      "name": "Error Handling",
      "aspects": [
        {
          "type": "measurement",
          "description": "Returns appropriate HTTP status codes (400, 401, 403, 404, 503)",
          "maxMark": 1.0,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        },
        {
          "type": "measurement",
          "description": "Error responses include JSON object with error message",
          "maxMark": 0.5,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        },
        {
          "type": "measurement",
          "description": "Handles AI service unavailability gracefully",
          "maxMark": 0.5,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        }
      ]
    },
    {
      "name": "API Specification Compliance",
      "aspects": [
        {
          "type": "measurement",
          "description": "API endpoints match OpenAPI specification",
          "maxMark": 1.0,
          "wsosSection": 5,
          "calculation": {
            "type": "pass-or-fail"
          }
        },
        {
          "type": "judgement",
          "description": "API design follows REST principles and best practices",
          "maxMark": 0.5,
          "wsosSection": 5,
          "judgementScoreDescription": [
            "API endpoints are inconsistent and don't follow REST conventions",
            "Some endpoints follow REST conventions but with notable inconsistencies",
            "Most endpoints follow REST conventions with minor issues",
            "All endpoints follow REST conventions and best practices"
          ]
        }
      ]
    },
    {
      "name": "Organization and Communication",
      "aspects": [
        {
          "type": "judgement",
          "description": "Code organization and project structure",
          "maxMark": 1.0,
          "wsosSection": 1,
          "judgementScoreDescription": [
            "Poor code organization, files scattered without clear structure",
            "Basic organization with some structure but lacking consistency",
            "Good organization with clear structure and logical file placement",
            "Excellent organization following professional standards and conventions"
          ]
        },
        {
          "type": "judgement",
          "description": "Documentation and communication of solution",
          "maxMark": 1.0,
          "wsosSection": 2,
          "judgementScoreDescription": [
            "No documentation or explanation of implementation",
            "Minimal documentation with basic setup instructions",
            "Good documentation covering setup and key implementation details",
            "Comprehensive documentation with clear explanations and examples"
          ]
        }
      ]
    }
  ]
}